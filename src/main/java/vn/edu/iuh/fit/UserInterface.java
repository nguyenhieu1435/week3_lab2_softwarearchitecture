/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.edu.iuh.fit;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Acer
 */
public class UserInterface extends javax.swing.JFrame {
    private JFileChooser chooserProject;
    private JFileChooser chooserOutputFile;
    /**
     * Creates new form UserInterface
     */
    public UserInterface() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        lblChooseProject = new javax.swing.JLabel();
        txtChooseProject = new javax.swing.JTextField();
        btnSearchProject = new javax.swing.JButton();
        lblChooseOutputFile = new javax.swing.JLabel();
        txtChooseOutputFile = new javax.swing.JTextField();
        btnSearchOutputFile = new javax.swing.JButton();
        btnCheck = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeader.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblHeader.setText("Check Project Validation");

        lblChooseProject.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblChooseProject.setText("Choose project (Folder or Java file)");

        txtChooseProject.setEditable(false);
        txtChooseProject.setToolTipText("");
        txtChooseProject.setMinimumSize(new java.awt.Dimension(64, 30));
        txtChooseProject.setPreferredSize(new java.awt.Dimension(64, 30));
        txtChooseProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChooseProjectActionPerformed(evt);
            }
        });

        btnSearchProject.setText("Choose");
        btnSearchProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProjectActionPerformed(evt);
            }
        });

        lblChooseOutputFile.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblChooseOutputFile.setText("Choose File output (.txt)");

        txtChooseOutputFile.setEditable(false);
        txtChooseOutputFile.setMinimumSize(new java.awt.Dimension(64, 30));
        txtChooseOutputFile.setPreferredSize(new java.awt.Dimension(64, 30));
        txtChooseOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChooseOutputFileActionPerformed(evt);
            }
        });

        btnSearchOutputFile.setText("Choose");
        btnSearchOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchOutputFileActionPerformed(evt);
            }
        });

        btnCheck.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(256, Short.MAX_VALUE)
                .addComponent(lblHeader)
                .addGap(241, 241, 241))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChooseOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtChooseOutputFile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                                    .addComponent(txtChooseProject, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSearchProject, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                    .addComponent(btnSearchOutputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(lblChooseProject, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblHeader)
                .addGap(18, 18, 18)
                .addComponent(lblChooseProject)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearchProject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtChooseProject, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addComponent(lblChooseOutputFile)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearchOutputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtChooseOutputFile, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(85, 85, 85)
                .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtChooseProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChooseProjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChooseProjectActionPerformed

    private void btnSearchProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProjectActionPerformed
        // TODO add your handling code here:
        chooserProject = new JFileChooser();
        chooserProject.setCurrentDirectory(new java.io.File("."));
        chooserProject.setDialogTitle("Choose Project directory or File java");
        chooserProject.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        chooserProject.setMultiSelectionEnabled(false);
        chooserProject.setFileFilter(new FileFilter(){
            @Override
            public boolean accept(File f) {
                if (f.isDirectory()){
                    return true;
                }
                String extension = getExtension(f);
                return extension != null && extension.equalsIgnoreCase("java");
            }
            @Override
            public String getDescription() {
                return "Java Files (*.java)";
            }
        });
        int returnValue = chooserProject.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            File selectedFile = chooserProject.getSelectedFile();
            if (getExtension(selectedFile.getAbsoluteFile()).equalsIgnoreCase("java") || selectedFile.isDirectory()){
                txtChooseProject.setText(selectedFile.getAbsolutePath());
            } else {
                JOptionPane.showMessageDialog(null, "Invalid file!", "Notice", JOptionPane.ERROR_MESSAGE);
                txtChooseProject.setText("");
                
            }
        }
    }//GEN-LAST:event_btnSearchProjectActionPerformed

    public String getExtension(File f){
      
        String path = f.getAbsolutePath();
        if (path.trim().isEmpty()){
            return null;
        }
        String[] splits = path.split("\\.");
        return splits[splits.length-1];
        
    }
    private void txtChooseOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChooseOutputFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChooseOutputFileActionPerformed

    private void btnSearchOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchOutputFileActionPerformed
        // TODO add your handling code here:
        chooserOutputFile = new JFileChooser();
        chooserOutputFile.setCurrentDirectory(new java.io.File("."));
        chooserOutputFile.setDialogTitle("Choose Output file report (.txt)");
        chooserOutputFile.setMultiSelectionEnabled(false);
        chooserOutputFile.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooserOutputFile.setFileFilter(new FileFilter(){
            @Override
            public boolean accept(File f) {
                String extension = getExtension(f);
                return extension != null && extension.equalsIgnoreCase("txt");
            }
            @Override
            public String getDescription() {
                return "Text File (*.txt)";
            }
        });
        int returnValue = chooserOutputFile.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            File selectedFile = chooserOutputFile.getSelectedFile();
            if (getExtension(selectedFile.getAbsoluteFile()).equalsIgnoreCase("txt")){
                txtChooseOutputFile.setText(selectedFile.getAbsolutePath());
            } else {
                JOptionPane.showMessageDialog(null, "Invalid file!", "Notice", JOptionPane.ERROR_MESSAGE);
                txtChooseOutputFile.setText("");
            }
        }
    }//GEN-LAST:event_btnSearchOutputFileActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        // Prev handle

        if (!txtChooseProject.getText().trim().isEmpty() && !txtChooseProject.getText().trim().isEmpty()){
            btnCheck.setText("Handling");
            btnCheck.setEnabled(false);
            btnCheck.repaint();

            try {
                ProjectHandler projectHandler = new ProjectHandler(txtChooseProject.getText(), txtChooseOutputFile.getText());
                projectHandler.run();
            } catch (IOException ex) {
                Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
            } finally{
                btnCheck.setEnabled(true);
                btnCheck.setText("Check");
                btnCheck.repaint();
                txtChooseProject.setText("");
                txtChooseOutputFile.setText("");
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "You need choose Project Folder or Output File", "Invalid action!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnSearchOutputFile;
    private javax.swing.JButton btnSearchProject;
    private javax.swing.JLabel lblChooseOutputFile;
    private javax.swing.JLabel lblChooseProject;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JTextField txtChooseOutputFile;
    private javax.swing.JTextField txtChooseProject;
    // End of variables declaration//GEN-END:variables
}
